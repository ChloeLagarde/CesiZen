name: 01-2 - Integration SonarQube

on:
  workflow_call

jobs:
  QualityPHP:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_mysql, mysqli, mbstring, zip, exif, pcntl, bcmath, gd
          coverage: xdebug

      - name: Download Coverage Artifact
        uses: actions/download-artifact@v4
        with:
          name: php-coverage-report
          path: ./coverage
        continue-on-error: true

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist

      - name: Check Coverage Files
        run: |
          echo "🔍 Vérification des fichiers de couverture..."
          ls -la
          
          # Créer coverage.xml par défaut s'il n'existe pas
          if [ ! -f coverage.xml ]; then
            echo "Creating default coverage.xml file..."
            cat > coverage.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <coverage generated="1">
            <project timestamp="1">
              <metrics files="0" loc="0" ncloc="0" classes="0" methods="0" coveredmethods="0" conditionals="0" coveredconditionals="0" statements="0" coveredstatements="0" elements="0" coveredelements="0"/>
            </project>
          </coverage>
          EOF
          fi
          
          # Vérifier les dossiers de couverture
          if [ -d "coverage" ]; then
            echo "✅ Dossier coverage trouvé"
            ls -la coverage/
          fi

      - name: Debug Environment
        run: |
          echo "🔍 Debug des variables d'environnement:"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo ""
          echo "🔐 Vérification des secrets:"
          echo "SONAR_TOKEN présent: ${{ secrets.SONAR_TOKEN != '' }}"
          echo "GITHUB_TOKEN présent: ${{ secrets.GITHUB_TOKEN != '' }}"
          echo ""
          echo "📋 Structure du projet:"
          find . -name "*.php" -type f | head -10
          echo ""
          echo "📝 Dossiers sources:"
          ls -la

      - name: Create sonar-project.properties
        run: |
          cat > sonar-project.properties << EOF
          sonar.projectKey=ChloeLagarde_CesiZen
          sonar.projectName=CesiZen
          sonar.projectVersion=1.0
          sonar.organization=ChloeLagarde
          sonar.sources=controleur,config,vues,api
          sonar.exclusions=vendor/**,tests/**,assets/**,.github/**,docker-compose.yml,Dockerfile,**/*.js,**/*.css,**/*.md,**/*.sql,**/*.json,**/*.lock,**/*.sh
          sonar.php.coverage.reportPaths=coverage.xml
          sonar.sourceEncoding=UTF-8
          sonar.scm.provider=git
          EOF
          
          echo "📝 Contenu de sonar-project.properties:"
          cat sonar-project.properties

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ChloeLagarde_CesiZen
            -Dsonar.organization=cesizen
            -Dsonar.projectName=CesiZen
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=controleur,config,vues,api
            -Dsonar.exclusions=vendor/**,tests/**,assets/**,.github/**,docker-compose.yml,Dockerfile,**/*.js,**/*.css,**/*.md,**/*.sql,**/*.json,**/*.lock,**/*.sh
            -Dsonar.php.coverage.reportPaths=coverage.xml
            -Dsonar.sourceEncoding=UTF-8

      - name: Upload SonarCloud Results
        if: always()
        run: |
          echo "📊 Analyse SonarCloud terminée"
          echo "🔗 Consultez les résultats sur : https://sonarcloud.io/project/overview?id=ChloeLagarde_CesiZen"