name: 01-3 - Integration - SNYK Alternative

on:
  workflow_call

jobs:
  Security_Analysis:
    runs-on: ubuntu-latest 
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist

      - name: Install Snyk CLI
        run: |
          curl -Lo snyk https://github.com/snyk/cli/releases/latest/download/snyk-linux
          chmod +x snyk
          sudo mv snyk /usr/local/bin/

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Test PHP Dependencies with Snyk
        run: |
          echo "üîç Scan des d√©pendances PHP..."
          snyk test --severity-threshold=medium || echo "Vuln√©rabilit√©s d√©tect√©es"

      - name: Test Code with Snyk
        run: |
          echo "üîç Scan du code source..."
          snyk code test --severity-threshold=medium || echo "Probl√®mes de code d√©tect√©s"

      - name: Monitor Project
        if: github.ref == 'refs/heads/main'
        run: |
          echo "üìä Monitoring du projet..."
          snyk monitor || echo "Monitoring configur√©"

  Docker_Security:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build Docker Image
        run: docker build -t cesizen:security-test .

      - name: Install Snyk CLI
        run: |
          curl -Lo snyk https://github.com/snyk/cli/releases/latest/download/snyk-linux
          chmod +x snyk
          sudo mv snyk /usr/local/bin/

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      
      - name: Test Docker Image
        run: |
          echo "üê≥ Scan de l'image Docker..."
          snyk container test cesizen:security-test --severity-threshold=medium || echo "Vuln√©rabilit√©s Docker d√©tect√©es"