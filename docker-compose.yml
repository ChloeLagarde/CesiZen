version: '3.8'

services:
  # Service Web (PHP + Apache)
  cesizen-web:
    build: 
      context: .
      target: production
    container_name: cesizen-web
    ports:
      - "${WEB_PORT:-8000}:80"
    volumes:
      - .:/var/www/html
    depends_on:
      - cesizen-db
    networks:
      - cesizen_network
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html
      - DB_HOST=cesizen-db
      - DB_NAME=${DB_NAME:-cesizentest}
      - DB_USER=${DB_USER:-cesizen}
      - DB_PASS=${DB_PASS:-cesizen123}
      - DB_PORT=3306
    restart: unless-stopped

  # Service Base de données (MySQL)
  cesizen-db:
    image: mysql:8.0
    container_name: cesizen-db
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-cesizentest}
      MYSQL_USER: ${DB_USER:-cesizen}
      MYSQL_PASSWORD: ${DB_PASS:-cesizen123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./script\ bdd.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cesizen_network
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

  # PhpMyAdmin (optionnel, pour gérer la base de données)
  adminer:
    image: adminer
    container_name: cesizen-adminer
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: cesizen-db
    depends_on:
      - cesizen-db
    networks:
      - cesizen_network
    restart: unless-stopped

# Volumes persistants
volumes:
  mysql_data:
    driver: local

# Réseau pour la communication entre les services
networks:
  cesizen_network:
    driver: bridge